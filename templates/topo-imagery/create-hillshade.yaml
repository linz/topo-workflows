# yaml-language-server: $schema=https://raw.githubusercontent.com/argoproj/argo-workflows/v3.5.5/api/jsonschema/schema.json

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  # Template calling linz/topo-imagery for its main task (generate-hillshade)
  # see https://github.com/linz/topo-imagery/pull/1253
  name: test-af-tpl-create-hillshade
  labels:
    linz.govt.nz/category: raster
spec:
  arguments:
    parameters:
      - name: version_argo_tasks
        description: 'Specify a version of the argo-tasks image to use, e.g. "v4.1" or "latest"'
        default: 'v4'
      - name: version_topo_imagery
        description: 'Specify a version of the topo-imagery image to use, e.g. "v4.8" or "latest"'
        default: 'v7'
      - name: source
        description: 's3 path to where the TIFF files to generate hillshade from are stored.'
      - name: scale
        description: 'Scale of the source data.'
        default: '50000'
        enum:
          - '500'
          - '1000'
          - '2000'
          - '5000'
          - '10000'
          - '50000'
          - 'None'
      - name: group
        description: 'Number of tiles to group together.'
        default: '5'
      - name: target
        description: 's3 path to where the hillshade tiles will be stored. The different hillshade types will be stored in subdirectories using the preset name.'
      - name: hillshade_preset
        description: 'Type of hillshade to generate. Expects a string.'
        default: 'hillshade'
        enum:
          - 'hillshade'
          - 'hillshade-igor'
      - name: source_epsg
        default: '2193'
      - name: target_epsg
        default: '2193'
      - name: gdal_compression_preset
        default: 'dem_lerc'
      - name: include
        default: '.tiff?$'
      - name: odr_url
        default: ''
      - name: collection_id
        default: ''
      - name: cutline
        default: 's3://linz-basemaps-source/cutline/2020-05-07-cutline-nz-coasts-rural-and-urban.geojson'

  templateDefaults:
    container:
      imagePullPolicy: Always
      image: ''
  entrypoint: main
  templates:
    - name: main
      inputs:
        parameters:
          - name: source
            default: '{{workflow.parameters.source}}'
          - name: scale
            default: '{{workflow.parameters.scale}}'
          - name: group
            default: '{{workflow.parameters.group}}'
          - name: version_argo_tasks
            default: '{{workflow.parameters.version_argo_tasks}}'
          - name: version_topo_imagery
            default: '{{workflow.parameters.version_topo_imagery}}'
          - name: target
            default: '{{workflow.parameters.target}}'
          - name: hillshade_preset
            default: '{{workflow.parameters.hillshade_preset}}'
          - name: source_epsg
            default: '{{workflow.parameters.source_epsg}}'
          - name: target_epsg
            default: '{{workflow.parameters.target_epsg}}'
          - name: gdal_compression_preset
            default: '{{workflow.parameters.gdal_compression_preset}}'
          - name: gsd
            default: '{{workflow.parameters.gsd}}'
          - name: include
            default: '{{workflow.parameters.include}}'
          - name: odr_url
            default: '{{workflow.parameters.odr_url}}'
          - name: collection_id
            default: '{{workflow.parameters.collection_id}}'
          - name: cutline
            default: '{{workflow.parameters.cutline}}'
          - name: current_datetime
            default: ''
      dag:
        tasks:
          - name: tile-index-validate
            templateRef:
              name: tpl-at-tile-index-validate
              template: main
            arguments:
              parameters:
                - name: scale
                  value: '{{inputs.parameters.scale}}'
                - name: include
                  value: '{{inputs.parameters.include}}'
                - name: source
                  value: '{{=sprig.trim(inputs.parameters.source)}}'
                - name: source_epsg
                  value: '{{inputs.parameters.source_epsg}}'
                - name: validate
                  value: 'false'
                - name: retile
                  value: 'true'
                - name: preset
                  value: '{{inputs.parameters.gdal_compression_preset}}'
                - name: version
                  value: '{{= inputs.parameters.version_argo_tasks}}'
                - name: includeDerived
                  value: 'true'

          - name: group
            templateRef:
              name: tpl-at-group
              template: main
            arguments:
              artifacts:
                - name: input
                  from: '{{ tasks.tile-index-validate.outputs.artifacts.files }}'
              parameters:
                - name: size
                  value: '{{inputs.parameters.group}}'
                - name: version
                  value: '{{= inputs.parameters.version_argo_tasks}}'
            depends: 'tile-index-validate.Succeeded'

          - name: generate-hillshade
            template: generate-hillshade
            arguments:
              parameters:
                - name: group_id
                  value: '{{item}}'
                - name: target
                  value: '{{inputs.parameters.target}}'
                - name: hillshade_preset
                  value: '{{inputs.parameters.hillshade_preset}}'
                - name: collection_id
                  value: '{{inputs.parameters.collection_id}}'
                - name: gsd
                  value: '{{inputs.parameters.gsd}}'
                - name: current_datetime
                  value: '{{inputs.parameters.current_datetime}}'
                - name: version_topo_imagery
                  value: '{{inputs.parameters.version_topo_imagery}}'
              artifacts:
                - name: group_data
                  from: '{{ tasks.group.outputs.artifacts.output }}'
            depends: 'group'
            withParam: '{{tasks.group.outputs.parameters.output}}'

    - name: generate-hillshade
      nodeSelector:
        karpenter.sh/capacity-type: 'spot'
      inputs:
        parameters:
          - name: group_id
          - name: target
          - name: hillshade_preset
          - name: version_topo_imagery
          - name: collection_id
          - name: gsd
          - name: current_datetime
        artifacts:
          - name: group_data
            path: /tmp/input/
      container:
        image: '019359803926.dkr.ecr.ap-southeast-2.amazonaws.com/topo-imagery:{{=sprig.trim(inputs.parameters.version_topo_imagery)}}'
        resources:
          requests:
            memory: 7.8Gi
            cpu: 15000m
            ephemeral-storage: 29.5Gi
        volumeMounts:
          # This volume must be defined in the workflow calling this workflowTemplate
          - name: ephemeral
            mountPath: '/tmp'
        args:
          - python
          - '/app/scripts/generate_hillshade.py'
          - '--from-file'
          - '/tmp/input/{{inputs.parameters.group_id}}.json'
          - '--target'
          - '{{=sprig.trimSuffix("/", inputs.parameters.target)}}/'
          - '--preset'
          - '{{inputs.parameters.hillshade_preset}}'
          - '--collection-id'
          - '{{inputs.parameters.collection_id}}'
          - '--gsd'
          - '{{inputs.parameters.gsd}}'
          - '--current-datetime'
          - '{{inputs.parameters.current_datetime}}'