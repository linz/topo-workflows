# yaml-language-server: $schema=https://raw.githubusercontent.com/argoproj/argo-workflows/v3.5.5/api/jsonschema/schema.json

apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tpl-bm-create-pull-request
spec:
  templateDefaults:
    container:
      imagePullPolicy: Always
      image: ''
  entrypoint: main
  arguments:
    parameters:
      - name: version_argo_tasks
        description: Version of the argo-tasks CLI docker container to use
        value: v4

  templates:
    # Main entrypoint into the workflow
    - name: main
      inputs:
        parameters:
          - name: target
          - name: ticket
            description: Ticket ID e.g. 'BM-55'
            value: ''
          - name: config_type
            description: 'Type of Basemaps Config file to create in pull requests'
            value: 'raster'
            enum:
              - 'raster'
              - 'elevation'
              - 'vector'
          - name: individual
            description: 'Individual Config or Combined Config'
            value: 'combined'
            enum:
              - 'individual'
              - 'combined'
          - name: category
            description: 'Category of the Basemaps Config file'
            value: 'Rural Aerial Photos'
            enum:
              - 'Rural Aerial Photos'
              - 'Urban Aerial Photos'
              - 'Scanned Aerial Imagery'
              - 'Satellite Imagery'
              - 'Event'
              - 'Elevation'

      container:
        image: 019359803926.dkr.ecr.ap-southeast-2.amazonaws.com/argo-tasks:{{workflow.parameters.version_argo_tasks}}
        env:
          - name: AWS_ROLE_CONFIG_PATH
            value: s3://linz-bucket-config/config.basemaps.json
          - name: GITHUB_API_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-linz-li-bot-pat
                key: pat
        args:
          - 'bmc'
          - 'create-pr'
          - '--target={{inputs.parameters.target}}'
          - '--ticket={{inputs.parameters.ticket}}'
          - '--config-type={{inputs.parameters.config_type}}'
          - "--individual={{= inputs.parameters.individual == 'individual'? 'true' : 'false' }}"
          - '--category={{inputs.parameters.category}}'
